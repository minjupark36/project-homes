<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.homes.app.user.board.mapper.BoardMapper">

	<sql id="boardColumns">
		id,
		members_id,
		title,
		content,
		create_date,
		modified_date,
		categories_id,
		view,
		group_no,
		group_order,
		depth
	</sql>	
	
	<resultMap type="BoardDto" id="boardDtoResultMap">	
		<id property="id" column="id"/>
		<result property="memberId" column="members_id"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="createDate" column="create_date"/>
		<result property="modifiedDate" column="modified_date"/>
		<result property="categoriesId" column="categories_id"/>
		<result property="view" column="view"/>
		<result property="groupNo" column="group_no"/>
		<result property="groupOrder" column="group_order"/>
		<result property="depth" column="depth"/>
	</resultMap>
	
	<select id="getBoardList" 
		parameterType="hashMap"
		resultType="BoardDto" resultMap="boardDtoResultMap">
		SELECT
			id,
			members_id,
			CONCAT(REPEAT("ㅤRE:",depth),title) title,
			content,
			create_date,
			modified_date,
			categories_id,
			view,
			group_no,
			group_order,
			depth
		FROM boards 
		<if test="searchMap != null">
	      
	      
	      	<if test="searchMap.searchAs != null">
	      		AND ${searchMap.searchAs} LIKE CONCAT('%',#{searchMap.search},'%')
	      	</if>
	     
      	</if>
      	
      	order by group_no desc,group_order 
	</select>
	
	<select id="getBoardDetail" resultType="BoardDto" parameterType="long" resultMap="boardDtoResultMap">
		SELECT 
			<include refid="boardColumns" />
			
		FROM boards
		
		WHERE id=#{id}
	</select>
	
	<select id="getReplyList" resultType="BoardDto" parameterType="long" resultMap="boardDtoResultMap">
		SELECT
			id,
			members_id,
			CONCAT(REPEAT("ㅤRE:",depth),title) title,
			content,
			create_date,
			modified_date,
			categories_id,
			view,
			group_no,
			group_order,
			depth
		FROM boards b
		WHERE group_no=#{id} AND id!=#{id}
		order by group_no desc,depth
	</select>
	
	<delete id="deleteBoard" parameterType="long">
		DELETE FROM boards WHERE id=#{id}
	</delete>
	
	<select id="boardByCategory" 
		parameterType="hashMap"
		resultType="BoardDto" resultMap="boardDtoResultMap">
		SELECT
			id,
			members_id,
			CONCAT(REPEAT("ㅤRE:",depth),title) title,
			content,
			create_date,
			modified_date,
			categories_id,
			view,
			group_no,
			group_order,
			depth
		FROM boards 
		<if test="searchMap != null">
	      	<if test="searchMap.searchAs != null">
	      		AND ${searchMap.searchAs} LIKE CONCAT('%',#{searchMap.search},'%')
	      	</if>
	     
      	</if>
      	WHERE categories_id=#{categoriesId}
      	order by group_no desc,group_order 
	</select>
	
	<insert id="insertBoard" parameterType="BoardDto" useGeneratedKeys="true" keyColumn="id" keyProperty="id" >
	<selectKey keyProperty="id" resultType="long" order="BEFORE">
	
		select max(id)+1 from boards
	
	</selectKey>
	<if test="id!=null">
		INSERT INTO boards 			
		VALUES 
		(null,1,#{title},#{content},NOW(),null,#{categoriesId},0,#{id},0,0)
	</if>
	<if test="id==null">
		INSERT INTO boards 			
		VALUES 
		(null,1,#{title},#{content},NOW(),null,#{categoriesId},0,1,0,0)
	</if>
	</insert> 
	
	<update id="editBoard" parameterType="BoardDto">
		UPDATE boards
		SET title=#{title}, content=#{content}, modified_date=NOW(), categories_id=#{categoriesId}
		where id=#{id}
	</update>
	
	<update id="countView" parameterType="long">
  		UPDATE boards SET view = view + 1 WHERE id=#{id}
	</update>
	
	<select id="selectMaxId" resultType="long">
		SELECT MAX(id) from boards
	</select>
	
	<insert id="insertReply" parameterType="BoardDto">
		INSERT INTO boards 			
		VALUES 
		(null,1,#{title},#{content},NOW(),null,#{categoriesId},0,#{id},#{groupOrder}+1,#{depth}+1)
	</insert>
	
	<update id="groupOrderUpdate" parameterType="long">
    	update boards set group_order=group_order+1
    	where group_no=#{id} and group_order>#{groupOrder}
	</update>
	
	
	
</mapper>