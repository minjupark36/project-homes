<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.homes.app.common.comment.mapper.CommentMapper">
	<sql id="commentColumns">
		id,
		members_id,
		images_id,
		content,
		create_date,
		modified_date,
		group_no,
		group_order,
		depth
	</sql>	
	<resultMap type="CommentDto" id="commentDtoResultMap">	
	<id property="id" column="id"/>
	<result property="membersId" column="members_id"/>
	<result property="imageId" column="images_id"/>
	<result property="content" column="content"/>
	<result property="createDate" column="create_date"/>
	<result property="modifiedDate" column="modified_date"/>
	<result property="groupNo" column="group_no"/>
	<result property="groupOrder" column="group_order"/>
	<result property="depth" column="depth"/>
	<association property="memberDto" resultMap="MemberDto"/>
	</resultMap>
	
	<resultMap type="MemberDto" id="MemberDto">
		<id property="id" column="id"/>
		<result property="email" column="email"/>
		<result property="name" column="name"/>
		<result property="password" column="password"/>
		<result property="gender" column="gender"/>
		<result property="createDate" column="create_date"/>
		<result property="modifiedDate" column="modified_date"/>
		<result property="pwQuestion" column="pw_question"/>
		<result property="pwAnswer" column="pw_answer"/>
		<result property="role" column="role"/>
	</resultMap>
	
	<insert id="insertComment" parameterType="CommentDto" useGeneratedKeys="true" keyColumn="id" keyProperty="id" >
	<selectKey keyProperty="id" resultType="long" order="BEFORE">
		select max(id)+1 from comments
		
	</selectKey>
		<if test="id!=null">
			INSERT INTO comments 			
			VALUES 
			(null,#{membersId},#{imageId},#{content},NOW(),null,#{id},0,0)
		</if>
		<if test="id==null">
			INSERT INTO comments 			
			VALUES 
			(null,#{membersId},#{imageId},#{content},NOW(),null,1,0,0)
		</if>
	</insert>
	
	<select id="commentList" resultType="CommentDto" parameterType="Long" resultMap="commentDtoResultMap">
		SELECT 
			c.id,
			members_id,
			images_id,
			CONCAT(REPEAT("ã…¤RE:",depth),content) content,
			c.create_date,
			c.modified_date,
			group_no,
			group_order,
			depth,
			m.name
			
		FROM comments c
		JOIN members m
		ON
		m.id = c.members_id
		
		WHERE images_id=#{id}
		order by group_no desc,depth
	</select>
	
	<delete id="deleteComment" parameterType="long">
		DELETE FROM comments WHERE id=#{id}
	</delete>
	
	<update id="editComment" parameterType="CommentDto">
		UPDATE comments
		SET content=#{content}, modified_date=NOW()
		where id=#{id}
	</update>
	
	<insert id="replyComment" parameterType="CommentDto">
		INSERT INTO comments 			
		VALUES 
		(null,#{membersId},#{imageId},#{content},NOW(),null,#{groupNo},#{groupOrder}+1,#{depth}+1)
	</insert>
	
	<update id="groupOrderUpdate" parameterType="long">
    	UPDATE comments SET group_order=group_order+1
    	WHERE group_no=#{id} AND group_order>#{groupOrder}
	</update>
	
	<select id="countComment" parameterType="long" resultType="long">
		SELECT COUNT(*) FROM comments 
		WHERE images_id=#{id}
	</select>


</mapper>